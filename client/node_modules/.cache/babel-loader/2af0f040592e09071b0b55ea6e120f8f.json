{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\Amanda Lelia\\\\Desktop\\\\Bootcamp\\\\React\\\\google-books-react\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\Amanda Lelia\\\\Desktop\\\\Bootcamp\\\\React\\\\google-books-react\\\\client\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\n\n/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\nexport default {\n  // Gets all books\n  getBooks: function getBooks() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function getBook(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function deleteBook(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: function () {\n    var _saveBook = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(bookData) {\n      var exists;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return axios.get(\"/api/books/\" + bookData.id);\n\n          case 2:\n            exists = _context.sent;\n\n            if (exists.data) {\n              _context.next = 9;\n              break;\n            }\n\n            _context.next = 6;\n            return axios.post(\"/api/books\", bookData);\n\n          case 6:\n            return _context.abrupt(\"return\", {\n              message: \"Book saved.\"\n            });\n\n          case 9:\n            return _context.abrupt(\"return\", {\n              message: \"Book already saved.\"\n            });\n\n          case 10:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }));\n\n    function saveBook(_x) {\n      return _saveBook.apply(this, arguments);\n    }\n\n    return saveBook;\n  }(),\n  // Gets all books\n  searchBooks: function () {\n    var _searchBooks = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(query) {\n      var data, books, _iteratorNormalCompletion, _didIteratorError, _iteratorError, _iterator, _step, book;\n\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\".concat(encodeURIComponent(query)));\n\n          case 2:\n            data = _context2.sent.data.items;\n            //console.log(data);\n            books = [];\n            _iteratorNormalCompletion = true;\n            _didIteratorError = false;\n            _iteratorError = undefined;\n            _context2.prev = 7;\n\n            for (_iterator = data[Symbol.iterator](); !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              book = _step.value;\n              books.push({\n                id: book.id,\n                title: book.volumeInfo.title,\n                authors: book.volumeInfo.authors,\n                description: book.volumeInfo.description,\n                image: book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : \"https://books.google.ca/googlebooks/images/no_cover_thumb.gif\",\n                link: book.volumeInfo.infoLink\n              });\n            } //console.log(books);\n\n\n            _context2.next = 15;\n            break;\n\n          case 11:\n            _context2.prev = 11;\n            _context2.t0 = _context2[\"catch\"](7);\n            _didIteratorError = true;\n            _iteratorError = _context2.t0;\n\n          case 15:\n            _context2.prev = 15;\n            _context2.prev = 16;\n\n            if (!_iteratorNormalCompletion && _iterator.return != null) {\n              _iterator.return();\n            }\n\n          case 18:\n            _context2.prev = 18;\n\n            if (!_didIteratorError) {\n              _context2.next = 21;\n              break;\n            }\n\n            throw _iteratorError;\n\n          case 21:\n            return _context2.finish(18);\n\n          case 22:\n            return _context2.finish(15);\n\n          case 23:\n            return _context2.abrupt(\"return\", books);\n\n          case 24:\n          case \"end\":\n            return _context2.stop();\n        }\n      }, _callee2, null, [[7, 11, 15, 23], [16,, 18, 22]]);\n    }));\n\n    function searchBooks(_x2) {\n      return _searchBooks.apply(this, arguments);\n    }\n\n    return searchBooks;\n  }()\n};","map":{"version":3,"sources":["C:/Users/Amanda Lelia/Desktop/Bootcamp/React/google-books-react/client/src/utils/API.js"],"names":["axios","getBooks","get","getBook","id","deleteBook","delete","saveBook","bookData","exists","data","post","message","searchBooks","query","encodeURIComponent","items","books","book","push","title","volumeInfo","authors","description","image","imageLinks","thumbnail","link","infoLink"],"mappings":";;;AAAA;AACA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe;AACb;AACAC,EAAAA,QAAQ,EAAE,oBAAW;AACnB,WAAOD,KAAK,CAACE,GAAN,CAAU,YAAV,CAAP;AACD,GAJY;AAKb;AACAC,EAAAA,OAAO,EAAE,iBAASC,EAAT,EAAa;AACpB,WAAOJ,KAAK,CAACE,GAAN,CAAU,gBAAgBE,EAA1B,CAAP;AACD,GARY;AASb;AACAC,EAAAA,UAAU,EAAE,oBAASD,EAAT,EAAa;AACvB,WAAOJ,KAAK,CAACM,MAAN,CAAa,gBAAgBF,EAA7B,CAAP;AACD,GAZY;AAab;AACAG,EAAAA,QAAQ;AAAA,6EAAE,iBAAeC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACWR,KAAK,CAACE,GAAN,CAAU,gBAAgBM,QAAQ,CAACJ,EAAnC,CADX;;AAAA;AACJK,YAAAA,MADI;;AAAA,gBAIHA,MAAM,CAACC,IAJJ;AAAA;AAAA;AAAA;;AAAA;AAAA,mBAKAV,KAAK,CAACW,IAAN,CAAW,YAAX,EAAyBH,QAAzB,CALA;;AAAA;AAAA,6CAMC;AAAEI,cAAAA,OAAO,EAAE;AAAX,aAND;;AAAA;AAAA,6CAQC;AAAEA,cAAAA,OAAO,EAAE;AAAX,aARD;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAdK;AAyBb;AACAC,EAAAA,WAAW;AAAA,gFAAE,kBAAeC,KAAf;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA,mBACOd,KAAK,CAACE,GAAN,yDAA2Da,kBAAkB,CAACD,KAAD,CAA7E,EADP;;AAAA;AACPJ,YAAAA,IADO,kBACgGA,IADhG,CACqGM,KADrG;AAEX;AACIC,YAAAA,KAHO,GAGC,EAHD;AAAA;AAAA;AAAA;AAAA;;AAIX,6BAAiBP,IAAjB,uHAAuB;AAAdQ,cAAAA,IAAc;AACrBD,cAAAA,KAAK,CAACE,IAAN,CAAW;AACTf,gBAAAA,EAAE,EAAEc,IAAI,CAACd,EADA;AAETgB,gBAAAA,KAAK,EAAEF,IAAI,CAACG,UAAL,CAAgBD,KAFd;AAGTE,gBAAAA,OAAO,EAAEJ,IAAI,CAACG,UAAL,CAAgBC,OAHhB;AAITC,gBAAAA,WAAW,EAAEL,IAAI,CAACG,UAAL,CAAgBE,WAJpB;AAKTC,gBAAAA,KAAK,EAAEN,IAAI,CAACG,UAAL,CAAgBI,UAAhB,GAA6BP,IAAI,CAACG,UAAL,CAAgBI,UAAhB,CAA2BC,SAAxD,GAAoE,+DALlE;AAMTC,gBAAAA,IAAI,EAAET,IAAI,CAACG,UAAL,CAAgBO;AANb,eAAX;AAQD,aAbU,CAcX;;;AAdW;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA,8CAeJX,KAfI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AA1BE,CAAf","sourcesContent":["/* eslint-disable import/no-anonymous-default-export */\nimport axios from \"axios\";\n\nexport default {\n  // Gets all books\n  getBooks: function() {\n    return axios.get(\"/api/books\");\n  },\n  // Gets the book with the given id\n  getBook: function(id) {\n    return axios.get(\"/api/books/\" + id);\n  },\n  // Deletes the book with the given id\n  deleteBook: function(id) {\n    return axios.delete(\"/api/books/\" + id);\n  },\n  // Saves a book to the database\n  saveBook: async function(bookData) {\n    let exists = await axios.get(\"/api/books/\" + bookData.id);\n    //console.log(bookData);\n    //console.log(exists);\n    if (!exists.data) {\n      await axios.post(\"/api/books\", bookData)\n      return { message: \"Book saved.\" };\n    } else {\n      return { message: \"Book already saved.\" };\n    }\n  },\n  // Gets all books\n  searchBooks: async function(query) {\n    let data = (await axios.get(`https://www.googleapis.com/books/v1/volumes?q=${encodeURIComponent(query)}`)).data.items;\n    //console.log(data);\n    let books = [];\n    for (let book of data) {\n      books.push({\n        id: book.id,\n        title: book.volumeInfo.title,\n        authors: book.volumeInfo.authors,\n        description: book.volumeInfo.description,\n        image: book.volumeInfo.imageLinks ? book.volumeInfo.imageLinks.thumbnail : \"https://books.google.ca/googlebooks/images/no_cover_thumb.gif\",\n        link: book.volumeInfo.infoLink\n      });\n    }\n    //console.log(books);\n    return books;\n  },\n};"]},"metadata":{},"sourceType":"module"}